{\rtf1\ansi\ansicpg1252\cocoartf2580
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fmodern\fcharset0 Courier;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;}
{\*\expandedcolortbl;;\cssrgb\c0\c0\c0;}
\margl1440\margr1440\vieww28600\viewh18000\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 HW09 \
\
\pard\pardeftab720\partightenfactor0

\f1 \cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Question 01) Recently we discussed floating point arithmetic, which has become\
the standard way of representing numbers on a computer. One of the key aspects\
of floating point numbers is that the gap between a number and it's floating\
point representation increases with the magnitude of the number. \
This differs from what is called a "fixed\
point" representation, where the gap is constant. \
\
What is an advantage or disadvantage to using floating point instead of fixed\
point?\
\
Note: Your answer is only expected to be a short paragraph. You are not expected to\
prove anything! \
\
Floating point can be either or depending on the magnitude of the numbers being dealt with. The larger the numbers, the more gap there is and the more likely the code is to break or begin to be unstable. This eludes to a disadvantage, however can be converted to an advantage when scaled down. For example 1001-1000 and 2-1 are the same thing to us, but the computer has a difference in this \'93gap\'94 when reading these two, with the former being much larger. Thus, if you are able to scale the numbers down, you now have less gap than you would if you used a fixed point arithmatic or larger magnitude floating point. This now portrays an advantage of floating point over fixed point. }